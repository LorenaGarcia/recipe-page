{"version":3,"sources":["components/Header.js","components/Instructions.js","components/Ingredients.js","components/Yields.js","RecipePage.js","App.js","serviceWorker.js","index.js","photo1.png"],"names":["ContainerText","styled","div","Title","p","SubTitle","Image","img","Header","src","ImageHeader","alt","ContainerIngredients","ContainerInput","ContainerLabel","Container","Label","label","DivOrange","TextOrange","Instructions","TitleIngredients","Input","input","Ingredients","type","SubtitleOrange","Subtitle","ContainerFirst","ContainerIcon","ContainerInstruction","DivIcon","Yields","className","header","GridHeader","GridIngredients","GridYields","Footer","RecipePage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0bc3a4fc.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport ImageHeader from \"../photo1.png\";\n\nexport const ContainerText = styled.div`\n  text-align: left;\n  max-width: 592px;\n`;\n\nexport const Title = styled.p`\n  font-family: Playfair Display;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 48px;\n  line-height: 64px;\n  color: #000000;\n\n  @media (max-width: 700px) {\n    font-size: 24px;\n    line-height: 32px;\n  }\n`;\n\nexport const SubTitle = styled.p`\n  font-family: Montserrat;\n  font-style: italic;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 17px;\n  color: #4f4f4f;\n`;\n\nexport const Image = styled.img`\n  max-height: 470px;\n  max-width: 969px;\n  margin-top: 30px;\n\n  @media (max-width: 700px) {\n    margin: 0px;\n    max-width: 100%;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <>\n      <ContainerText>\n        <Title>Classic Cheesecake Recipe</Title>\n        <SubTitle>\n          Look no further for a creamy and ultra smooth classic cheesecake\n          recipe! Paired with a buttery graham cracker crust, no one can deny\n          its simple decadence. For the best results, bake in a water bath.\n        </SubTitle>\n      </ContainerText>\n      <Image src={ImageHeader} alt=\"ImageHeader\" />\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const ContainerText = styled.div`\n  text-align: left;\n  max-width: 592px;\n`;\n\nexport const Title = styled.p`\n  font-family: Playfair Display;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 32px;\n  color: #333333;\n`;\n\nexport const ContainerIngredients = styled.div`\n  text-align: left;\n  max-width: 592px;\n`;\n\nexport const ContainerInput = styled.div`\n  max-width: 10%;\n  float: left;\n  margin-top: 3px;\n`;\n\nexport const ContainerLabel = styled.div`\n  max-width: 90%;\n  float: right;\n  margin-bottom: 10px;\n  margin-left: 10px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const Label = styled.label`\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 25px;\n  color: #333333;\n`;\n\nexport const DivOrange = styled.div`\n  width: 36px;\n  height: 36px;\n  left: 236px;\n  top: 1507px;\n  background: #f2994a;\n  border-radius: 6px;\n`;\n\nexport const TextOrange = styled.div`\n  font-family: Playfair Display;\n  text-align: center;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 32px;\n  color: #ffffff;\n`;\n\nconst Instructions = () => {\n  return (\n    <ContainerText>\n      <Title>Instructions</Title>\n      <ContainerIngredients>\n        <Container>\n          <ContainerInput>\n            <DivOrange>\n              <TextOrange>1</TextOrange>\n            </DivOrange>\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              Adjust the oven rack to the lower-middle position and preheat oven\n              to 350°F (177°C).\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <DivOrange>\n              <TextOrange>2</TextOrange>\n            </DivOrange>\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              <strong>Make the crust:</strong> Using a food processor, pulse the\n              graham crackers into crumbs. Pour into a medium bowl and stir in\n              sugar and melted butter until combined. (You can also pulse it all\n              together in the food processor.) Mixture will be sandy. Press\n              firmly into the bottom and slightly up the sides of a 9-inch or\n              10-inch springform pan. No need to grease the pan first. I use the\n              bottom of a measuring cup to pack the crust down tightly. Pre-bake\n              for 8 minutes. Remove from the oven and place the hot pan on a\n              large piece of aluminum foil. The foil will wrap around the pan\n              for the water bath in step 4. Allow crust to slightly cool as you\n              prepare the filling.\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <DivOrange>\n              <TextOrange>3</TextOrange>\n            </DivOrange>\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              <strong>Make the filling:</strong> Using a handheld or stand mixer\n              fitted with a paddle attachment, beat the cream cheese and\n              granulated sugar together on medium-high speed in a large bowl\n              until the mixture is smooth and creamy, about 2 minutes. Add the\n              sour cream, vanilla extract, and lemon juice then beat until fully\n              combined. On medium speed, add the eggs one at a time, beating\n              after each addition until just blended. After the final egg is\n              incorporated into the batter, stop mixing. To help prevent the\n              cheesecake from deflating and cracking as it cools, avoid\n              over-mixing the batter as best you can.\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <DivOrange>\n              <TextOrange>4</TextOrange>\n            </DivOrange>\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              <strong>Prepare the simple water bath (see note)</strong> Boil a\n              pot of water. You need 1 inch of water in your roasting pan for\n              the water bath, so make sure you boil enough. I use an entire\n              kettle of hot water. As the water is heating up, wrap the aluminum\n              foil around the springform pan. Pour the cheesecake batter on top\n              of the crust. Use a rubber spatula or spoon to smooth it into an\n              even layer. Place the pan inside of a large roasting pan.\n              Carefully pour the hot water inside of the pan and place in the\n              oven. (Or you can place the roasting pan in the oven first, then\n              pour the hot water in. Whichever is easier for you.)\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <DivOrange>\n              <TextOrange>5</TextOrange>\n            </DivOrange>\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              Bake cheesecake for 55-70 minutes or until the center is almost\n              set. When it’s done, the center of the cheesecake will slightly\n              wobble if you gently shake the pan. Turn the oven off and open the\n              oven door slightly. Let the cheesecake sit in the oven in the\n              water bath as it cools down for 1 hour. Remove from the oven and\n              water bath, then cool cheesecake completely at room temperature.\n              Then refrigerate the cheesecake for at least 4 hours or overnight.\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <DivOrange>\n              <TextOrange>6</TextOrange>\n            </DivOrange>\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              Use a knife to loosen the chilled cheesecake from the rim of the\n              springform pan, then remove the rim. Using a clean sharp knife,\n              cut into slices for serving. For neat slices, wipe the knife clean\n              and dip into warm water between each slice.\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <DivOrange>\n              <TextOrange>7</TextOrange>\n            </DivOrange>\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              Serve cheesecake with desired toppings. Cover and store leftover\n              cheesecake in the refrigerator for up to 5 days.\n            </Label>\n          </ContainerLabel>\n        </Container>\n      </ContainerIngredients>\n    </ContainerText>\n  );\n};\n\nexport default Instructions;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Instructions from \"./Instructions\";\n\nexport const ContainerText = styled.div`\n  text-align: left;\n  max-width: 592px;\n`;\n\nexport const Title = styled.p`\n  font-family: Playfair Display;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 32px;\n  color: #333333;\n`;\n\nexport const ContainerIngredients = styled.div`\n  text-align: left;\n  max-width: 592px;\n`;\n\nexport const ContainerInput = styled.div`\n  max-width: 10%;\n  float: left;\n  margin-top: 3px;\n`;\n\nexport const ContainerLabel = styled.div`\n  max-width: 90%;\n  float: right;\n  margin-bottom: 10px;\n  margin-left: 10px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const TitleIngredients = styled.p`\n  font-family: Playfair Display;\n  font-style: italic;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 24px;\n  color: #333333;\n`;\n\nexport const Label = styled.label`\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 25px;\n  color: #333333;\n`;\n\nexport const Input = styled.input`\n  &:checked + ${Label} {\n    background: orange;\n  }\n`;\n\nconst Ingredients = () => {\n  return (\n    <ContainerText>\n      <Title>Ingredients</Title>\n      <ContainerIngredients>\n        <TitleIngredients>Graham Cracker Crust</TitleIngredients>\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              1 and 1/2 cups (150g) <strong>graham cracker crumbs</strong>{\" \"}\n              (about 10 full sheet graham crackers)\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              5 Tablespoons (70g) <strong>unsalted butter</strong>, melted\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              1/4 cup (50g) <strong>granulated sugar</strong>\n            </Label>\n          </ContainerLabel>\n        </Container>\n      </ContainerIngredients>\n\n      <ContainerIngredients>\n        <TitleIngredients>Cheesecake</TitleIngredients>\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              four 8-ounce blocks (904g) full-fat <strong>cream cheese</strong>,\n              softened to room temperature\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              1 cup (200g) <strong>granulated sugar</strong>\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              1 cup (240g) full-fat <strong>sour cream</strong>, at room\n              temperature\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              1 teaspoon <strong>pure vanilla extract</strong>\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              2 teaspoons <strong>fresh lemon juice</strong> (optional, but\n              recommended)\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              3 large <strong>eggs</strong>, at room temperature\n            </Label>\n          </ContainerLabel>\n        </Container>\n\n        <Container>\n          <ContainerInput>\n            <Input type=\"checkbox\" />\n          </ContainerInput>\n          <ContainerLabel>\n            <Label>\n              topping suggestions: salted caramel, lemon curd, strawberry\n              topping, chocolate ganache, red wine chocolate ganache, fresh\n              fruit, whipped cream, or raspberry sauce (recipe in notes)\n            </Label>\n          </ContainerLabel>\n        </Container>\n      </ContainerIngredients>\n      <Instructions />\n    </ContainerText>\n  );\n};\n\nexport default Ingredients;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const ContainerText = styled.div`\n  float: right;\n  margin-top: 30px;\n  padding: 40px;\n  width: 216px;\n  left: 984px;\n  top: 711px;\n  background: #ffffff;\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n\n  @media (max-width: 700px) {\n    display: contents;\n    box-shadow: none;\n    border-radius: 0px;\n    width: 100%;\n  }\n`;\n\nexport const Title = styled.p`\n  font-family: Montserrat;\n  font-style: normal;\n  text-align: left;\n  font-weight: bold;\n  font-size: 10px;\n  line-height: 12px;\n  text-transform: uppercase;\n  color: #bdbdbd;\n`;\n\nexport const SubtitleOrange = styled.p`\n  font-family: Montserrat;\n  margin-top: -8px;\n  font-style: normal;\n  text-align: left;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 17px;\n  color: #f2994a;\n`;\n\nexport const Subtitle = styled.p`\n  font-family: Montserrat;\n  font-style: normal;\n  text-align: left;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 17px;\n  color: #333333;\n  margin-top: -8px;\n`;\n\nexport const ContainerFirst = styled.div`\n  display: flex;\n  @media (max-width: 700px) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  @media (max-width: 700px) {\n    display: inline-block;\n    margin-right: 30px;\n  }\n`;\n\nexport const ContainerIcon = styled.div`\n  float: left;\n`;\n\nexport const ContainerInstruction = styled.div`\n  float: right;\n`;\n\nexport const DivIcon = styled.div`\n  margin-top: 50%;\n`;\n\nconst Yields = () => {\n  return (\n    <ContainerText>\n      <ContainerFirst>\n        <ContainerIcon>\n          <DivIcon>\n            <i className=\"material-icons\">local_dining</i>\n          </DivIcon>\n        </ContainerIcon>\n        <ContainerInstruction>\n          <Title>Yields</Title>\n          <SubtitleOrange>\n            <strong>12 servings</strong>\n          </SubtitleOrange>\n        </ContainerInstruction>\n      </ContainerFirst>\n      <Container>\n        <ContainerIcon>\n          <DivIcon>\n            <i className=\"material-icons\">schedule</i>\n          </DivIcon>\n        </ContainerIcon>\n        <ContainerInstruction>\n          <Title>Prep TIme</Title>\n          <Subtitle>45 minutes</Subtitle>\n        </ContainerInstruction>\n      </Container>\n      <Container>\n        <ContainerIcon>\n          <DivIcon>\n            <i className=\"material-icons\">schedule</i>\n          </DivIcon>\n        </ContainerIcon>\n        <ContainerInstruction>\n          <Title>Cook Time</Title>\n          <Subtitle>1 hour</Subtitle>\n        </ContainerInstruction>\n      </Container>\n      <Container>\n        <ContainerIcon>\n          <DivIcon>\n            <i className=\"material-icons\">schedule</i>\n          </DivIcon>\n        </ContainerIcon>\n        <ContainerInstruction>\n          <Title>Total Time</Title>\n          <Subtitle>7,75 hours</Subtitle>\n        </ContainerInstruction>\n      </Container>\n    </ContainerText>\n  );\n};\n\nexport default Yields;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport Ingredients from \"./components/Ingredients\";\nimport Yields from \"./components/Yields\";\n\nexport const Container = styled.header`\n  min-height: 100vh;\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 40% 2% 15%;\n  grid-gap: 10px;\n  grid-template-areas:\n    \"header header header header\"\n    \"main . sidebar sidebar\"\n    \"footer footer footer footer\";\n\n  @media (max-width: 700px) {\n    grid-template-columns: 100%;\n    grid-gap: 0px;\n    margin: 12px;\n    grid-template-areas:\n      \"header\"\n      \"sidebar\"\n      \"main\"\n      \"footer\";\n  }\n`;\n\nexport const GridHeader = styled.div`\n  grid-area: header;\n`;\n\nexport const GridIngredients = styled.div`\n  grid-area: main;\n`;\n\nexport const GridYields = styled.div`\n  grid-area: sidebar;\n`;\n\nexport const Footer = styled.div`\n  grid-area: footer;\n  height: 50px;\n  text-align: center;\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: #a9a9a9;\n`;\n\nconst RecipePage = () => {\n  return (\n    <Container>\n      <GridHeader>\n        <Header />\n      </GridHeader>\n      <GridIngredients>\n        <Ingredients />\n      </GridIngredients>\n      <GridYields>\n        <Yields />\n      </GridYields>\n      <Footer>\n        <p>Lorraine @ DevChallenges.io</p>\n      </Footer>\n    </Container>\n  );\n};\n\nexport default RecipePage;\n","import React from 'react';\nimport RecipePage from './RecipePage'\n\nfunction App() {\n  return (\n    <div>\n        <RecipePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/photo1.109049fd.png\";"],"sourceRoot":""}